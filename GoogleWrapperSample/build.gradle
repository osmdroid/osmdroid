/*

    NOTICE, this module is deprecated and is scheduled to be removed in a future version of osmdroid
    2 June 2018

 */
description = 'DEPRECATED Example application for 3rd party utilities, including the Google wrapper sample, Bing map sources, etc'

apply plugin: 'com.android.application'

android {

    compileSdkVersion = compileSdk

    defaultConfig {
        applicationId "org.osmdroid.google.sample"
        minSdkVersion 9
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    lintOptions {
        abortOnError false
    }
}


dependencies {
    testImplementation "junit:junit:${project.property('junit.version')}"

    implementation "com.android.support:appcompat-v7:${project.property('android-support.version')}"
    //this covers google maps v2 apis
    //implementation 'com.google.android.gms:play-services:8.+'

    implementation 'com.google.android.gms:play-services-maps:8.+'

    implementation "com.android.support:support-v4:${project.property('android-support.version')}"
    implementation "com.android.support:appcompat-v7:${project.property('android-support.version')}"
    implementation project(':osmdroid-android')
    implementation project(':osmdroid-third-party')

    androidTestImplementation 'com.android.support.test:runner:0.4.+'
    androidTestImplementation 'com.android.support.test:rules:0.4.+'
    androidTestImplementation "com.android.support:support-annotations:${project.property('android-support.version')}"
}

project.gradle.taskGraph.whenReady {
    //this is just for Travis CI builds, since this package needs at least api 9 with google apis
    if (System.getenv("API") != null && System.getenv("ANDROID_TAG") != null) {
        String apistring = System.getenv("API")
        String tag = System.getenv("ANDROID_TAG")
        if (tag.contains("google_apis")) {
            int api = Integer.parseInt(apistring.trim())
            if (api < 9) {
                println "Skipping GoogleWrapperSample instrumentation test since system image API level is < 9"
                installDebug { actions = [] }
                connectedDebugAndroidTest { actions = [] }
            }
        } else {
            println "Skipping GoogleWrapperSample instrumentation test since system image doesn't have google APIs"
            installDebug { actions = [] }
            connectedDebugAndroidTest { actions = [] }
        }
    }

}


android.applicationVariants.all { variant ->
    if (variant.getBuildType().name == "debug") {
        task "configDevice${variant.name.capitalize()}" (type: Exec){
            dependsOn variant.install

            group = 'nameofyourtaskgroup'
            description = 'Describe your task here.'

            def adb = android.getAdbExe().toString()
            def mypermission = 'android.permission.ACCESS_FINE_LOCATION'
            commandLine "$adb shell pm grant ${variant.applicationId} $mypermission".split(' ')
        }
        variant.testVariant.connectedInstrumentTest.dependsOn "configDevice${variant.name.capitalize()}"
    }
}


android.applicationVariants.all { variant ->
    if (variant.getBuildType().name == "debug") {
        task "configDevice2${variant.name.capitalize()}" (type: Exec){
            dependsOn variant.install

            group = 'nameofyourtaskgroup'
            description = 'Describe your task here.'

            def adb = android.getAdbExe().toString()
            def mypermission = 'android.permission.WRITE_EXTERNAL_STORAGE '
            commandLine "$adb shell pm grant ${variant.applicationId} $mypermission".split(' ')
        }
        variant.testVariant.connectedInstrumentTest.dependsOn "configDevice2${variant.name.capitalize()}"
    }
}
