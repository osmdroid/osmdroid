description = "A tool to package OpenStreetMap tiles"
apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'application'
apply plugin: 'maven-publish'

group = project.property("pom.groupId")
version =  project.property("pom.version")
mainClassName = "org.osmdroid.mtp.OSMMapTilePackager"

test {
    testLogging {
        showStandardStreams = true
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

dependencies {
    implementation 'org.apache.httpcomponents:httpmime:4.5.14'
    implementation 'org.apache.james:apache-mime4j:0.8.11'
    implementation 'org.xerial:sqlite-jdbc:3.45.3.0'


    testImplementation "org.junit.vintage:junit-vintage-engine:${project.property('junit.version')}"
}

//copy the instrumentation tests from the maven osmdroid-android-it src folder
task preBuildTask1(type: Copy) {
    println("copying StreamUtils sources")
    description 'copy java classes from osmdroid-android.'
    from("${rootDir}/osmdroid-android/src/main/java/org/osmdroid/tileprovider/util/StreamUtils.java")
    into "src/main/java/org/osmdroid/tileprovider/util/"

}

task preBuildTask2(type: Copy) {
    println("copying GEMF sources")
    description 'copy java classes from osmdroid-android.'
    from("${rootDir}/osmdroid-android/src/main/java/org/osmdroid/util/GEMFFile.java")
    into "src/main/java/org/osmdroid/util/"

}


task preBuildTask3(type: Copy) {
    println("copying api sources")
    description 'copy java classes from osmdroid-android.'
    from("${rootDir}/osmdroid-android/src/main/java/org/osmdroid/api/") {
        exclude 'IMyLocationOverlay.java'
        exclude 'Polyline.java'
        exclude 'Marker.java'
        exclude 'IProjection.java'
    }
    into "src/main/java/org/osmdroid/api/"

}


task preBuildTask4(type: Delete) {
    println("removing android specific api sources")
    delete "${projectDir}/src/main/java/org/osmdroid/api/"
    delete "${projectDir}/src/main/java/org/osmdroid/api/IMyLocationOverlay.java"
    delete "${projectDir}/src/main/java/org/osmdroid/api/Polyline.java"
    delete "${projectDir}/src/main/java/org/osmdroid/api/Marker.java"
    delete "${projectDir}/src/main/java/org/osmdroid/api/IProjection.java"
}

compileJava.dependsOn preBuildTask1
compileJava.dependsOn preBuildTask2
compileJava.dependsOn preBuildTask3
compileJava.dependsOn preBuildTask4

afterEvaluate {
    publishing {

        publications {
            release(MavenPublication) {
                from components.java
                groupId project.property("pom.groupId")
                artifactId project.name
                version = project.property("pom.version")
                pom {
                    description =  project.description
                    url = project.property("pom.url")

                    //scm, organization and developers are injected via other mechanisms

                    licenses {
                        license {
                            name=project.property("pom.licenses.license.0.name");
                            url=project.property("pom.licenses.license.0.url");
                            distribution==project.property("pom.licenses.license.0.distribution");
                        }

                    }
                }
            }

            pdZipPublication(MavenPublication) {
                artifact "build/distributions/OSMMapTilePackager-" + project.property("pom.version") + ".zip"

            }
        }
    }


}
